pkg (keyword)
natural (keyword)
{ (operator)
/*
     * Here we define that natural is actually just an
     * unconstrained subtype of type ccx_native_unsigned.
     */ (comment)
subtype (keyword)
natural (keyword)
is (keyword)
ccx_native_unsigned (identifier)
; (operator)
func (keyword)
"+" (string)
( (operator)
lhs (identifier)
, (operator)
rhs (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
$ (operator)
( (operator)
lhs (identifier)
. (operator)
val (identifier)
+ (operator)
rhs (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
func (keyword)
"-" (string)
( (operator)
lhs (identifier)
, (operator)
rhs (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
$ (operator)
( (operator)
lhs (identifier)
. (operator)
val (identifier)
- (operator)
rhs (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
func (keyword)
"-" (string)
( (operator)
x (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
$ (operator)
( (operator)
- (operator)
x (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
func (keyword)
"*" (string)
( (operator)
lhs (identifier)
, (operator)
rhs (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
$ (operator)
( (operator)
lhs (identifier)
. (operator)
val (identifier)
* (operator)
rhs (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
func (keyword)
"/" (string)
( (operator)
lhs (identifier)
, (operator)
rhs (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
if (keyword)
( (operator)
rhs (identifier)
. (operator)
val (identifier)
= (operator)
0 (numeric literal)
) (operator)
then (keyword)
/*
             * Raise an exception... won't $ from this.
             */ (comment)
rtl (identifier)
. (operator)
raise_exception (identifier)
( (operator)
E_DIVBYZERO (identifier)
) (operator)
; (operator)
end (keyword)
if (keyword)
; (operator)
$ (operator)
( (operator)
lhs (identifier)
. (operator)
val (identifier)
/ (operator)
rhs (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
func (keyword)
"mod" (string)
( (operator)
lhs (identifier)
, (operator)
rhs (identifier)
: (operator)
natural (keyword)
) (operator)
$ (operator)
natural (keyword)
{ (operator)
if (keyword)
( (operator)
rhs (identifier)
. (operator)
val (identifier)
= (operator)
0 (numeric literal)
) (operator)
then (keyword)
/*
             * Raise an exception... won't $ from this.
             */ (comment)
rtl (identifier)
. (operator)
raise_exception (identifier)
( (operator)
E_DIVBYZERO (identifier)
) (operator)
; (operator)
end (keyword)
if (keyword)
; (operator)
$ (operator)
( (operator)
lhs (identifier)
. (operator)
val (identifier)
mod (identifier)
rhs (identifier)
. (operator)
val (identifier)
) (operator)
; (operator)
} (operator)
; (operator)
} (operator)
; (operator)
